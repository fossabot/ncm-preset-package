---
version: 2

references:
  container-config-node8: &container-config-node8
    docker:
      - image: circleci/node:8
  restore-deps-cache: &restore-deps-cache
    restore_cache:
      keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
  save-deps-cache: &save-deps-cache
    save_cache:
      key: yarn-packages-{{ checksum "yarn.lock" }}
      paths:
        - ~/.cache/yarn
        - node_modules
jobs:
  install:
    <<: *container-config-node8
    steps:
      - checkout
      - *restore-deps-cache
      - run:
          name: Install Dependencies
          command: make install
      - *save-deps-cache
  test:
    <<: *container-config-node8
    steps:
      - checkout
      - *restore-deps-cache
      - run:
          name: Install Dependencies and Run Test Coverage
          command: make install test-coverage
      - *save-deps-cache
      - run: npx coveralls < coverage/lcov.info
  release:
    <<: *container-config-node8
    steps:
      - checkout
      - *restore-deps-cache
      - run:
          name: Build Package and Semantic-Release
          command: make install build release
      - run:
          name: Update Doc GitHub Page
          command: |
            LAST_COMMIT=$(git rev-parse HEAD)
            DOCS_COMMIT=$(git log -1 --format=format:%H --full-diff docs)
            README_COMMIT=$(git log -1 --format=format:%H --full-diff README.md)
            SUMMARY_COMMIT=$(git log -1 --format=format:%H --full-diff SUMMARY.md)
            BOOKJSON_COMMIT=$(git log -1 --format=format:%H --full-diff book.json)
            BOOKIGNORE_COMMIT=$(git log -1 --format=format:%H --full-diff .bookignore)

            func updateGithubPage() {
              git config --global user.name 'CircleCI';
              git config --global user.email 'circleci@users.noreply.github.com';
              npx jsdoc2md src/** -g none > API.md;
              npx gitbook build;
              npx gh-pages -d _book -m 'Automated Github Page Update';
            }

            if [ $LAST_COMMIT = $DOCS_COMMIT ] \
            || [ $LAST_COMMIT = $README_COMMIT ] \
            || [ $LAST_COMMIT = $SUMMARY_COMMIT ] \
            || [ $LAST_COMMIT = $BOOKJSON_COMMIT ] \
            || [ $LAST_COMMIT = $BOOKIGNORE_COMMIT ] ;
            then
              updateGithubPage()
            else
              echo 'Nothing related to docs have been changed. Skip.'
            fi;

workflows:
  version: 2
  test-and-release:
    jobs:
      - test:
          filters:
            branches:
              ignore: gh-pages
      - release:
          requires:
            - test
          filters:
            branches:
              only: master
